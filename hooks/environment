#!/usr/bin/env bash
#
# This script validates the environment needed to perform code signing.
# 1. Ensure that the requested keychain exists
# 2. Validate that this job is allowed to proceed with codesigning tasks.

[[ -n "${DEBUG-}" ]] && set -x

# TODO: Make this be the actual signing host, not my laptop.
permitted_signing_host="sean-mac-c02xv3a8jgh6"
codesign_keychain="${BUILDKITE_PLUGIN_MAC_CODESIGN_KEYCHAIN}"
pw_secret="${BUILDKITE_PLUGIN_MAC_CODESIGN_SIGNING_CERT_PW_SECRET}"

security list-keychains | grep "${codesign_keychain}" > /dev/null
if [[ $? -ne 0 || -z "${codesign_keychain}" ]]; then
  echo "Unable to find/read specified signing keychain ${codesign_keychain}"
  exit 1
fi

# Verify that this is only running on MacOS, via BuildKite, in proper CI, on our blessed agent.
if [[ "${BUILDKITE}" != "true" ]]; then
  echo "Code signing can only be done as part of a BuildKite pipeline."
  exit 2
fi

if [[ "${BUILDKITE_SOURCE}" == "local" ]]; then
  echo "Code signing is not allowed to be done locally."
  exit 3
fi

if [[ "${BUILDKITE_AGENT_META_DATA_PLATFORM}" != "macos" ]]; then
  echo "Code signing of macOS binaries can only be performed on macos, not ${BUILDKITE_AGENT_META_DATA_PLATFORM}."
  exit 4
fi

# This var doesn't seem to be set.  Will address later.
# if [[ "${BUILDKITE_AGENT_META_DATA_HOSTNAME}" != "${permitted_signing_host}" ]]; then
#   echo "Host ${BUILDKITE_AGENT_META_DATA_HOSTNAME} is not permitted to do code-signing."
#   exit 5
# fi
